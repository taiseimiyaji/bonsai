name: デプロイワークフロー

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: bonsai-410001
  SERVICE_NAME: bonsai
  REGION: asia-northeast1

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    
    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@v3

      - name: Google Cloud認証
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Google Cloud SDKのセットアップ
        uses: google-github-actions/setup-gcloud@v1

      - name: Dockerリポジトリの設定
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: ビルドとプッシュ
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: マイグレーションの実行
        run: |
          # entrypoint.shを使わずに直接Prismaコマンドを実行
          docker run --rm \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e DIRECT_URL="${{ secrets.DIRECT_URL }}" \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            /bin/sh -c "npx prisma migrate deploy"

      - name: データベース接続テスト
        run: |
          # データベース接続テストのみを実行
          docker run --rm \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e DIRECT_URL="${{ secrets.DIRECT_URL }}" \
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            /bin/sh -c "npx prisma db execute --stdin < /app/scripts/test-connection.sql"

      - name: Cloud Runへのデプロイ
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }},DIRECT_URL=${{ secrets.DIRECT_URL }},RUN_MIGRATIONS=false"
