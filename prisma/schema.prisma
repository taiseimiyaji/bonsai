// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String      @id @default(uuid())
  googleId  String      @unique
  email     String      @unique
  name      String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Todo      Todo[]
  Scrap     Scrap[]
  ScrapBook ScrapBook[]
}

model Todo {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Scrap {
  id          String         @id @default(uuid())
  userId      String
  user        User           @relation(fields: [userId], references: [id])
  title       String
  content     String?
  link        String?
  image       String?
  ogpData     Json?
  scrapBookId String
  scrapBook   ScrapBook      @relation(fields: [scrapBookId], references: [id])
  categoryId  String?
  category    ScrapCategory? @relation(fields: [categoryId], references: [id])
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model ScrapBook {
  id          String          @id @default(uuid())
  title       String
  description String?
  userId      String
  user        User            @relation(fields: [userId], references: [id])
  scraps      Scrap[]
  image       String?
  links       ScrapbookLink[] @relation("SourceScrapbook")
  linkedBy    ScrapbookLink[] @relation("TargetScrapbook")
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model ScrapbookLink {
  id                String    @id @default(uuid())
  sourceScrapbookId String
  targetScrapbookId String
  createdAt         DateTime  @default(now())
  sourceScrapbook   ScrapBook @relation("SourceScrapbook", fields: [sourceScrapbookId], references: [id])
  targetScrapbook   ScrapBook @relation("TargetScrapbook", fields: [targetScrapbookId], references: [id])

  @@unique([sourceScrapbookId, targetScrapbookId])
}

model ScrapCategory {
  id     String  @id @default(uuid())
  name   String  @unique
  scraps Scrap[]
}
